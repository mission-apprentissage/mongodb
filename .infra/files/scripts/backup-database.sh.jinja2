#!/usr/bin/env bash
set -euo pipefail

readonly BACKUP_LOCAL_DIR="/opt/app/mongodb/backups"
readonly FILENAME="$(date +%Y-%m-%d_%H-%M-%S).gpg"
readonly BACKUP_FILE="${BACKUP_LOCAL_DIR}/${FILENAME}"

export AWS_PROFILE="mongodb"

function backup() {
  echo "Creating backup..."
  mkdir -p "${BACKUP_LOCAL_DIR}"
  mongodump --uri="mongodb+srv://backup:{{vault[env_type].backup}}@mongodb-{{env_type}}.apprentissage.beta.gouv.fr/?tls=true&readPreference=secondaryPreferred" --oplog --gzip --archive \
  | bash "/opt/app/tools/gpg/encrypt.sh" > "$BACKUP_FILE"
}

function upload(){
  # upload gpg file to S3
  echo "Uploading backup to S3..."
  aws s3 cp "$BACKUP_FILE" "s3://{{ dns_name }}-backups/${FILENAME}"
}

function delete(){
  echo "Removing MongoDB backups..."
  rm -f "${BACKUP_FILE}"
}

function uploadPreviousFailedBackup(){
  # list all files in the backup directory
  ls -1 "${BACKUP_LOCAL_DIR}" | while read -r file; do
    # check if the file is not already uploaded
    if ! aws s3 ls "s3://{{ dns_name }}-backups/${file}" &> /dev/null; then
      echo "Uploading previous failed backup: ${file}"
      aws s3 cp "${BACKUP_LOCAL_DIR}/${file}" "s3://{{ dns_name }}-backups/${file}"
    fi
  done
}

backup
upload
delete
uploadPreviousFailedBackup
