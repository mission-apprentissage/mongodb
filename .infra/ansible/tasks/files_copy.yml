---
- name: Création de l'arborescence /opt/app à partir de .infra/files
  file:
    path: "/opt/app/{{ item.path }}"
    state: directory
    mode: "{{ item.mode }}"
  with_filetree: "{{inventory_dir}}/files"
  when:
    - item.state == 'directory'
    # /app/tools is managed by infra
    - item.path | regex_search('^tools/?') == none
    - item.path | regex_search('^system/?') == none

- name: Copie des fichiers de l'arborescence /opt/app à partir de .infra/files
  ansible.builtin.copy:
    src: "{{ item.src }}"
    dest: "/opt/app/{{ item.path }}"
    mode: "{{ item.mode }}"
  with_filetree: "{{inventory_dir}}/files"
  when:
    - item.state == 'file'
    - item.path | regex_search('\.jinja2$') == none
    - item.path | basename != '.gitkeep'
    - item.path | basename != '.DS_Store'
    # /app/tools is managed by infra
    - item.path | regex_search('^tools/?') == none
    - item.path | regex_search('^system/?') == none

- name: Copie des template de l'arborescence /opt/app à partir de .infra/files
  ansible.builtin.template:
    src: "{{ item.src }}"
    dest: "/opt/app/{{ (item.path | splitext)[0] }}"
    mode: "{{ item.mode }}"
  with_filetree: "{{inventory_dir}}/files"
  when:
    - item.state == 'file'
    - item.path | regex_search('\.jinja2$') != none
    - item.path | basename != '.gitkeep'
    - item.path | basename != '.DS_Store'

- name: "MongoDB service configuration"
  ansible.builtin.copy:
    src:  "{{inventory_dir}}/files/configs/mongodb/mongod.service"
    dest: "/etc/systemd/system/mongod.service"
    mode: "0644"
    owner: root
  notify:
    - Reload Daemon
    - Restart MongoDB

- name: "Disable Transparent Huge Pages (THP)"
  ansible.builtin.copy:
    src:  "{{inventory_dir}}/files/configs/mongodb/disable-transparent-huge-pages.service"
    dest: "/etc/systemd/system/disable-transparent-huge-pages.service"
    mode: "0644"
    owner: root
  notify:
    - Reload Daemon
    - Restart THP

- name: "Create configuration file"
  ansible.builtin.template:
    src:  "{{inventory_dir}}/files/mongod.conf.jinja2"
    dest: "/etc/mongod.conf"
    mode: "0600"
    owner: mongodb
  notify:
    - Restart MongoDB

- name: "Create keyfile"
  ansible.builtin.template:
    src:  "{{inventory_dir}}/files/keyfile.jinja2"
    dest: "/mnt/data/keyfile"
    mode: "0600"
    owner: mongodb
  notify:
    - Restart MongoDB
